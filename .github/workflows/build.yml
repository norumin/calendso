name: Build

on:
  push:
    branches:
      - production
      - staging
      - develop
  workflow_dispatch:

jobs:
  build:
    name: Build docker image and push to ECR
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REPO_ORIGIN: ${{ github.repositoryUrl }}
      BACKEND_BUCKET: ${{ secrets.BACKEND_BUCKET }}
      BACKEND_LOCKTABLE: ${{ secrets.BACKEND_LOCKTABLE }}
      BACKEND_REGION: ${{ secrets.BACKEND_REGION }}
      APP_NAME: Norumin Scheduling System
      APP: calendso
      STAGE: ${{ github.ref_name }}
      DOMAIN: ${{ secrets.DOMAIN }}
      APP_INSTANCE_PUBLIC_KEY: ${{ secrets.APP_INSTANCE_PUBLIC_KEY }}
    steps:
      - name: Create build-time docker network
        run: docker network create builder
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7
          terraform_wrapper: false
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.1
        with:
          terragrunt_version: 0.38.7
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read calendso-ref
        run: echo "CALENDSO_REF=$(cat calendso-ref)" >> $GITHUB_ENV
      - name: Checkout calendso source
        uses: actions/checkout@v3
        with:
          repository: calcom/cal.com
          path: builder/calendso
          ref: ${{ env.CALENDSO_REF }}
      - name: Check for infrastructure drift
        working-directory: ./infrastructure
        run: terragrunt plan -detailed-exitcode -no-color
      - name: Generate terraform output
        working-directory: ./infrastructure
        run: terragrunt output -json -no-color > output.json
      - name: Extract build-time arguments from terraform output and set as environment variables
        working-directory: ./infrastructure
        run: |
          jq -Mr ".app_image_build_args.value|to_entries|map(\"\(.key)=\(.value)\")[]" < output.json >> $GITHUB_ENV
          source $GITHUB_ENV
          echo "::add-mask::$POSTGRES_PASSWORD"
          echo "::add-mask::$ECR_REPO_URL"
          echo "::add-mask::$NEXTAUTH_SECRET"
          echo "::add-mask::$CALENDSO_ENCRYPTION_KEY"
      - name: Create build-time database server
        run: |
          docker run \
            --network builder \
            --network-alias database \
            --name database \
            -d \
            -p 5432:5432/tcp \
            -e "POSTGRES_USER=$POSTGRES_USER" \
            -e "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" \
            -e "POSTGRES_DB=$POSTGRES_DB" \
            -e GITHUB_ACTIONS=true \
            -e CI=true \
            --health-cmd pg_isready \
            --health-interval 10s \
            --health-timeout 5s \
            --health-retries 5 \
            postgres:14
      - name: Build image
        working-directory: ./builder
        run: |
          docker build \
            --network builder \
            --build-arg STAGE=${{ env.STAGE }} \
            --build-arg NEXT_PUBLIC_LICENSE_CONSENT=${{ env.NEXT_PUBLIC_LICENSE_CONSENT }} \
            --build-arg NEXT_PUBLIC_WEBAPP_URL=${{ env.NEXT_PUBLIC_WEBAPP_URL }} \
            --build-arg NEXT_PUBLIC_APP_URL=${{ env.NEXT_PUBLIC_APP_URL }} \
            --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
            --build-arg NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }} \
            --build-arg CALENDSO_ENCRYPTION_KEY=${{ env.CALENDSO_ENCRYPTION_KEY }} \
            --build-arg CALCOM_TELEMETRY_DISABLED=${{ env.CALCOM_TELEMETRY_DISABLED }} \
            -t ${{ env.ECR_REPO_URL }}:latest \
            .
      - name: Push image to ECR
        run: docker push ${{ env.ECR_REPO_URL }}:latest
